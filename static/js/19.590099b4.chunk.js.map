{"version":3,"sources":["pages/hbHistory/index.jsx","components/header/index.jsx","config/envconfig.js","api/server.js","api/api.js"],"names":["HbHistory","state","title","HbHistoryArr","goBack","props","history","push","getHistoryHongbao","a","API","userInfo","user_id","limit","offset","HongbaoArr","setState","this","className","map","item","sum_condition","description_map","name","validity_periods","phone","limit_map","restaurant_flavor_ids","Component","connect","userInfoData","Header","handleBack","mode","icon","type","onLeftClick","imgUrl","Server","method","url","data","params","baseURL","Promise","resolve","reject","_option","baseUrl","timeout","headers","withCredentials","validateStatus","status","axios","request","then","res","JSON","parse","error","response","result","Object","tip","err","getUrlConcat","id","console","info","message","keyword"],"mappings":"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","file":"static/js/19.590099b4.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Header from '../../components/header/index.jsx';\r\nimport API from '../../api/api';\r\nimport './index.scss';\r\nclass HbHistory extends Component {\r\n  state = {\r\n    title: '历史红包',\r\n    HbHistoryArr: []\r\n\r\n  }\r\n\r\n\r\n  goBack = () => {\r\n    this.props.history.push('/balance')\r\n  }\r\n\r\n  getHistoryHongbao = async () => {\r\n    const HongbaoArr = await API.getHistoryHongbao(this.props.userInfo.user_id, { limit: 20, offset: 0 });\r\n    this.setState({\r\n      HbHistoryArr: HongbaoArr\r\n    })\r\n  }\r\n  componentDidMount() {\r\n    this.getHistoryHongbao()\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"hb_history\">\r\n        <Header title={this.state.title} goBack={this.goBack}></Header>\r\n        <section>\r\n          <ul className=\"hongbao_list_ul\">\r\n            {\r\n              this.state.HbHistoryArr.map(item => {\r\n                return (\r\n                  <li className=\"hongbao_list_li\">\r\n                    <section className='list_item' >\r\n                      <div className=\"list_item_left\">\r\n                        <span>￥</span>\r\n                        <span>{item.sum_condition / 10}</span>\r\n                        <span>.</span>\r\n                        {(item.sum_condition / 10) % 1 === 0 && <span >0</span>}\r\n                        <p>{item.description_map.sum_condition}</p>\r\n                      </div>\r\n                      <div className=\"list_item_right\">\r\n                        <h4>{item.name}</h4>\r\n                        <p>{item.description_map.validity_periods}</p>\r\n                        <p>{item.description_map.phone}</p>\r\n                      </div>\r\n                      <div className=\"time_left\">\r\n                      </div>\r\n                    </section>\r\n                    {item.limit_map && <div className=\"list_item_footer\">{item.limit_map.restaurant_flavor_ids}</div>}\r\n                  </li>\r\n                )\r\n\r\n              })\r\n            }\r\n          </ul>\r\n        </section>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userInfo: state.userInfoData.userInfo\r\n  }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps)(HbHistory)","import React, { Component } from 'react'\r\nimport { NavBar, Icon } from 'antd-mobile';\r\nimport './index.scss'\r\nexport default class Header extends Component {\r\n\r\n  handleBack = () => {\r\n    this.props.goBack()\r\n  }\r\n  render() {\r\n    return (\r\n      <header className=\"header-container\">\r\n        {this.props.goBack && <NavBar\r\n          mode=\"dark\"\r\n          icon={!this.props.icon ? <Icon type='left' />:<Icon type=\"search\" />}\r\n          onLeftClick={this.handleBack}\r\n        >{this.props.title}</NavBar>}\r\n      </header>\r\n    )\r\n  }\r\n}","// 全局配置\r\n\r\nlet baseUrl = ''\r\nlet imgUrl\r\nif (process.env.NODE_ENV === 'development') {\r\n    imgUrl = 'http://cangdu.org:8001/img/'\r\n} else if (process.env.NODE_ENV === 'production') {\r\n    baseUrl = '//elm.cangdu.org'\r\n    imgUrl = '//elm.cangdu.org/img/'\r\n}\r\n\r\nexport {\r\n    baseUrl,\r\n    imgUrl\r\n}","import axios from 'axios'\r\nimport { baseUrl } from '../config/envconfig'\r\n\r\n/**\r\n * @params method {string} 方法名\r\n * @params url {string} 请求地址  例如：/login 配合baseURL组成完整请求地址\r\n * @params baseURL {string} 请求地址统一前缀 ***需要提前指定***  例如：http://cangdu.org\r\n * @params timeout {number} 请求超时时间 默认 30000\r\n * @params params {object}  get方式传参key值\r\n * @params headers {string} 指定请求头信息\r\n * @params withCredentials {boolean} 请求是否携带本地cookies信息默认开启\r\n * @params validateStatus {func} 默认判断请求成功的范围 200 - 300\r\n * @return {Promise}\r\n * 其他更多拓展参看axios文档后 自行拓展\r\n * 注意：params中的数据会覆盖method url 参数，所以如果指定了这2个参数则不需要在params中带入\r\n */\r\nexport default class Server {\r\n    axios(method, url, data, params) {\r\n        const baseURL = 'http://elm.cangdu.org' + url;\r\n        return new Promise((resolve, reject) => {\r\n            let _option = {\r\n                method,\r\n                url: baseURL,\r\n                baseUrl: baseURL,\r\n                timeout: 30000,\r\n                params,\r\n                data,\r\n                headers: null,\r\n                withCredentials: true, //是否携带cookie发起请求\r\n                validateStatus: (status) => {\r\n                    return status >= 200 && status < 300\r\n                },\r\n            }\r\n            axios.request(_option).then(res => {\r\n                resolve(typeof res.data === 'object' ? res.data : JSON.parse(res.data))\r\n            }, error => {\r\n                if (error.response) {\r\n                    reject(error.response.data)\r\n                } else {\r\n                    reject(error)\r\n                }\r\n            })\r\n        })\r\n    }\r\n}","import Server from './server'\r\nimport { getUrlConcat } from '../utils/commons'\r\nclass API extends Server {\r\n    /**\r\n     *  用途：获取验证码\r\n     *  @url http://cangdu.org:8001/v1/captchas\r\n     *  返回status为1表示成功\r\n     *  @method get\r\n     *  @return {promise}\r\n     */\r\n    async getCaptchaCode() {\r\n            try {\r\n                let result = await this.axios('post', '/v1/captchas', {})\r\n                if (result.status === 1 && (result instanceof Object)) {\r\n                    return result || []\r\n                } else {\r\n                    let err = {\r\n                        tip: '获取验证码失败',\r\n                        response: result,\r\n                    }\r\n                    throw err\r\n                }\r\n            } catch (err) {\r\n                throw err\r\n            }\r\n        }\r\n        /**\r\n         *  用途：账号密码登录\r\n         *  @url http://cangdu.org:8001/v2/login\r\n         *  @method post\r\n         *  @return {promise}\r\n         */\r\n    async accountLogin(data) {\r\n        try {\r\n            let result = await this.axios('post', '/v2/login', data)\r\n            if (result.status !== 0 && (result instanceof Object)) {\r\n                return result || []\r\n            } else {\r\n                let err = {\r\n                    tip: '登录失败',\r\n                    response: result,\r\n                }\r\n                return err\r\n            }\r\n        } catch (err) {\r\n            throw err\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 获取用户消息\r\n     * @param {*}； \r\n     * get的拼接参数\r\n     */\r\n    async getUser(data) {\r\n        try {\r\n            let result = await this.axios('get', '/v1/user' + getUrlConcat(data))\r\n            if (result.status !== 0 && (result instanceof Object)) {\r\n                return result || []\r\n            } else {\r\n                let err = {\r\n                    tip: '获取用户信息失败',\r\n                    response: result,\r\n                }\r\n                throw err\r\n            }\r\n        } catch (err) {\r\n            throw err\r\n        }\r\n    }\r\n\r\n\r\n    async getHongbao(id, params) {\r\n        try {\r\n            console.info(params)\r\n            const result = await this.axios('get', '/promotion/v2/users/' + id + '/hongbaos', null, params)\r\n            return result\r\n        } catch (error) {\r\n\r\n        }\r\n    }\r\n\r\n    async getHistoryHongbao(id, params) {\r\n        try {\r\n            const result = await this.axios('get', '/promotion/v2/users/' + id + '/expired_hongbaos', null, params);\r\n            return result\r\n        } catch (err) {\r\n\r\n        }\r\n    }\r\n\r\n    /**\r\n     *  用途：退出登录\r\n     *  @url https://elm.cangdu.org/v2/signout\r\n     *  返回status为1表示成功\r\n     *  @method GET\r\n     *  @return {promise}\r\n     */\r\n    async changepassword(data) {\r\n        try {\r\n            let result = await this.axios('post', '/v2/changepassword', data);\r\n            if (result && result.status === 1) {\r\n                return result;\r\n            } else {\r\n                let err = {\r\n                    tip: result.message,\r\n                    response: result,\r\n                }\r\n                return err\r\n            }\r\n\r\n        } catch (error) {\r\n            throw error;\r\n        }\r\n    }\r\n    async loginOut() {\r\n        try {\r\n\r\n            let result = await this.axios('get', '/v2/signout');\r\n            if (result && result.status === 1) {\r\n                return result;\r\n            } else {\r\n                let err = {\r\n                    tip: '网络连接超时',\r\n                    response: result,\r\n                }\r\n                return err;\r\n            }\r\n        } catch (err) {\r\n            throw err;\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     *  用途：上传图片\r\n     *  @url https://elm.cangdu.org/v1/addimg/shop\r\n     *  返回status为1表示成功\r\n     *  @method post\r\n     *  @return {promise}\r\n     */\r\n    async uploadImg(data) {\r\n        try {\r\n            let result = await this.axios('post', '/v1/addimg/' + 'avatar', data);\r\n            if (result && result.status === 1) {\r\n                return result;\r\n            } else {\r\n                let err = {\r\n                    tip: '上传图片失败',\r\n                    response: result,\r\n                    url: '//elm.cangdu.org/v1/addimg/shop',\r\n                }\r\n                return err;\r\n            }\r\n        } catch (err) {\r\n            throw err;\r\n        }\r\n    }\r\n\r\n    /**\r\n     *  用途：获取用户地址列表\r\n     *  @url https://elm.cangdu.org/v1/addimg/shop\r\n     *  返回status为1表示成功\r\n     *  @method get\r\n     */\r\n    async getAddress(id) {\r\n            try {\r\n                let result = await this.axios('get', '/v1/users/' + id + '/addresses');\r\n                if (result) {\r\n                    return result;\r\n                } else {\r\n                    let err = {\r\n                        tip: '获取地址失败',\r\n                        response: result,\r\n                        url: '//elm.cangdu.org/v1/carts/addresses',\r\n                    }\r\n                    throw err;\r\n                }\r\n            } catch (err) {\r\n                throw err;\r\n            }\r\n        }\r\n        /**\r\n         *\r\n         *  用途: 搜索符合条件的地址\r\n         * @param {*} data\r\n         * @memberof API\r\n         */\r\n    async searchPois(data) {\r\n        try {\r\n            let result = await this.axios('get', '/v1/pois/' + getUrlConcat(data));\r\n            if (result) {\r\n                return result;\r\n            } else {\r\n                let err = {\r\n                    tip: '搜索地点失败',\r\n                    response: result,\r\n                    url: '//elm.cangdu.org/v1/carts/addresses',\r\n                }\r\n                throw err;\r\n            }\r\n        } catch (err) {\r\n            throw err;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 用途: 根据经纬度获取地点信息\r\n     * @param {*} data\r\n     * @memberof API\r\n     */\r\n    async getPoisSite(data) {\r\n        try {\r\n            let result = await this.axios('get', '/v2/pois/' + data);\r\n            if (result) {\r\n                return result;\r\n            } else {\r\n                let err = {\r\n                    tip: '获取地点失败',\r\n                    response: result,\r\n                    url: '//elm.cangdu.org/v1/carts/addresses',\r\n                }\r\n                throw err;\r\n            }\r\n        } catch (err) {\r\n            throw err;\r\n        }\r\n    }\r\n\r\n    /**\r\n     *用途: 获取食物种类\r\n     * @param {*} data\r\n     * @memberof API\r\n     */\r\n    async getFoodTypes(data) {\r\n        try {\r\n            let result = await this.axios('get', '/v2/index_entry/' + getUrlConcat(data));\r\n            if (result) {\r\n                return result;\r\n            } else {\r\n                let err = {\r\n                    tip: '获取食物种类失败',\r\n                    response: result,\r\n                    url: '//elm.cangdu.org/v1/carts/addresses',\r\n                }\r\n                throw err;\r\n            }\r\n        } catch (err) {\r\n            throw err;\r\n        }\r\n    }\r\n\r\n    /**\r\n     *用途: 猜测城市\r\n     * @param {*} keyword\r\n     * @memberof API\r\n     */\r\n    async cityGuess(keyword) {\r\n        try {\r\n            let result = await this.axios('get', '/v1/cities?type=guess');\r\n            if (result) {\r\n                return result;\r\n            } else {\r\n                let err = {\r\n                    tip: '城市失败',\r\n                    response: result,\r\n                    url: '//elm.cangdu.org/v1/carts/addresses',\r\n                }\r\n                throw err;\r\n            }\r\n        } catch (err) {\r\n            throw err;\r\n        }\r\n    }\r\n\r\n    /**\r\n     *用途: 获取商店列表\r\n     * @param {*} data\r\n     * @memberof API\r\n     */\r\n    async getShopList(data) {\r\n        try {\r\n            let result = await this.axios('get', '/shopping/restaurants' + getUrlConcat(data));\r\n            if (result) {\r\n                return result;\r\n            } else {\r\n                let err = {\r\n                    tip: '获取商店列表失败',\r\n                    response: result,\r\n                    url: '//elm.cangdu.org/v1/carts/addresses',\r\n                }\r\n                throw err;\r\n            }\r\n        } catch (err) {\r\n            throw err;\r\n        }\r\n    }\r\n\r\n    /**\r\n     *用途: 获取商店详情\r\n     * @param {*} id\r\n     * @param {*} data\r\n     * @memberof API\r\n     */\r\n    async shopDetails(id, data) {\r\n        try {\r\n            let result = await this.axios('get', '/shopping/restaurant/' + id + getUrlConcat(data));\r\n            if (result) {\r\n                return result;\r\n            } else {\r\n                let err = {\r\n                    tip: '获取商店详情失败',\r\n                    response: result,\r\n                    url: '//elm.cangdu.org/v1/carts/addresses',\r\n                }\r\n                throw err;\r\n            }\r\n        } catch (err) {\r\n            throw err;\r\n        }\r\n    }\r\n\r\n    /**\r\n     *用途: 获取食物清单\r\n     * @param {*} data\r\n     * @memberof API\r\n     */\r\n    async getfoodMenu(data) {\r\n        try {\r\n            let result = await this.axios('get', '/shopping/v2/menu/' + getUrlConcat(data));\r\n            if (result) {\r\n                return result;\r\n            } else {\r\n                let err = {\r\n                    tip: '获取商店详情失败',\r\n                    response: result,\r\n                    url: '//elm.cangdu.org/v1/carts/addresses',\r\n                }\r\n                throw err;\r\n            }\r\n        } catch (err) {\r\n            throw err;\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default new API();"],"sourceRoot":""}