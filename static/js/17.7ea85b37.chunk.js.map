{"version":3,"sources":["pages/login/index.jsx","components/header/index.jsx","config/envconfig.js","api/server.js","api/api.js","store/userInfo/action.js"],"names":["Login","state","title","hasError","phone","password","hasPwdShow","code","imgCodePath","onErrorClick","Toast","info","getCaptchaCode","a","API","res","setState","goLogin","sendObj","username","captcha_code","accountLogin","userInfo","tip","response","message","loginWay","setStore","user_id","props","saveUserInfo","history","push","this","goBack","value","replace","length","className","bind","type","placeholder","maxLength","onChange","error","onChangePassWord","checked","val","src","alt","onClick","submit","to","Component","connect","dispatch","Header","handleBack","mode","icon","onLeftClick","imgUrl","Server","method","url","data","params","baseURL","Promise","resolve","reject","_option","baseUrl","timeout","headers","withCredentials","validateStatus","status","axios","request","then","JSON","parse","result","Object","err","getUrlConcat","id","console","keyword","user","modifyUserInfo","key"],"mappings":"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","file":"static/js/17.7ea85b37.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport Header from './../../components/header/index.jsx'\r\nimport { List, InputItem, Toast, Switch, Button } from 'antd-mobile';\r\nimport { getImgPath, setStore } from '../../utils/commons'\r\nimport {saveUserInfo} from '../../store/userInfo/action.js'\r\nimport { createForm } from 'rc-form';\r\nimport API from '../../api/api'\r\nimport './index.scss'\r\n\r\nclass Login extends Component {\r\n  state = {\r\n    title: '密码登录',\r\n    hasError: false,\r\n    phone: '',\r\n    password: '',\r\n    hasPwdShow: false,\r\n    code: '',\r\n    imgCodePath: '',\r\n  }\r\n  goBack() {\r\n    this.props.history.goBack()\r\n  }\r\n\r\n  onErrorClick = () => {\r\n    if (this.state.hasError) {\r\n      Toast.info('Please enter 11 digits');\r\n    }\r\n  }\r\n  onChange(value) {\r\n    if (value.replace(/\\s/g, '').length < 11) {\r\n      this.setState({\r\n        hasError: true,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        hasError: false,\r\n      });\r\n    }\r\n    this.setState({\r\n      phone: value,\r\n    });\r\n  }\r\n  onChangePassWord(value) {\r\n    this.setState({\r\n      password: value,\r\n    });\r\n  }\r\n\r\n  onChangeCode(value) {\r\n\r\n  }\r\n\r\n  getCaptchaCode = async () => {\r\n    let res = await API.getCaptchaCode()\r\n    this.setState({\r\n      imgCodePath: res.code\r\n    })\r\n  }\r\n  goLogin = async () => {\r\n    const sendObj = {\r\n      username: this.state.phone,\r\n      password: this.state.password,\r\n      captcha_code: this.state.code\r\n    }\r\n    let userInfo = await API.accountLogin({ ...sendObj });\r\n    if (userInfo.tip) {\r\n      Toast.info(userInfo.response.message, 2, null, false);\r\n      if (!this.state.loginWay) this.getCaptchaCode();\r\n      return\r\n    }\r\n    setStore('user_id', userInfo.user_id)\r\n    setStore('userInfo', userInfo )\r\n    this.props.saveUserInfo(userInfo)\r\n    this.props.history.push('/profile')\r\n  }\r\n  submit() {\r\n    if (this.state.phone === '') {\r\n\r\n      Toast.info('请输入账号', 2, null, false);\r\n      return;\r\n    } else if (this.state.password === '') {\r\n      Toast.info('请输入密码', 2, null, false);\r\n      return\r\n    } else if (this.state.code === '') {\r\n      Toast.info('请输入验证码', 2, null, false);\r\n      return\r\n    }\r\n    this.goLogin()\r\n  }\r\n  componentDidMount() {\r\n    this.getCaptchaCode()\r\n  }\r\n  render() {\r\n    // const { getFieldProps } = this.props.form;\r\n    return (\r\n      <div className=\"login-container\">\r\n        <Header title={this.state.title} goBack={this.goBack.bind(this)} />\r\n        <div className=\"login-form\">\r\n          <List >\r\n            <InputItem\r\n     \r\n              type=\"text\"\r\n              placeholder=\"请输入账号\"\r\n              maxLength={11}\r\n              onErrorClick={this.onErrorClick.bind(this)}\r\n              onChange={this.onChange.bind(this)}\r\n              value={this.state.phone}\r\n            >账号</InputItem>\r\n          </List>\r\n          {!this.state.hasPwdShow ? <List >\r\n            <InputItem\r\n              type=\"password\"\r\n              placeholder=\"请输入密码\"\r\n              onChange={this.onChangePassWord.bind(this)}\r\n              value={this.state.password}\r\n            >密码</InputItem>\r\n            <Switch checked={this.state.hasPwdShow} onChange={() => {\r\n              this.setState({\r\n                hasPwdShow: !this.state.hasPwdShow,\r\n              });\r\n            }}\r\n            ></Switch>\r\n          </List> :\r\n            <List >\r\n              <InputItem\r\n      \r\n                type=\"text\"\r\n                placeholder=\"请输入密码\"\r\n                error={this.state.hasError}\r\n                onErrorClick={this.onErrorClick.bind(this)}\r\n                onChange={this.onChangePassWord.bind(this)}\r\n                value={this.state.password}\r\n              >密码</InputItem>\r\n              <Switch checked={this.state.hasPwdShow} onChange={() => {\r\n                this.setState({\r\n                  hasPwdShow: !this.state.hasPwdShow,\r\n                });\r\n              }}\r\n              ></Switch>\r\n            </List>\r\n          }\r\n          <List className='input-container captcha-code-container'>\r\n            <InputItem\r\n     \r\n              type=\"text\"\r\n              placeholder=\"请输入验证码\"\r\n              onChange={(val) => {\r\n                this.setState({\r\n                  code: val\r\n                })\r\n              }}\r\n              value={this.state.code}\r\n            >账号</InputItem>\r\n            <div className='img-change-img'>\r\n              <img src={this.state.imgCodePath} alt=\"img is wrong\" />\r\n              <div className='change-img' onClick={this.getCaptchaCode.bind(this)}>\r\n                <p>看不清</p>\r\n                <p>换一张</p>\r\n              </div>\r\n            </div>\r\n          </List>\r\n\r\n        </div>\r\n\r\n        <p className='login-tips'>\r\n          温馨提示: 未注册过的账号, 登录时自动注册\r\n      </p>\r\n        <p className='login-tips'>\r\n          注册过的用户可凭证账号密码登录\r\n      </p>\r\n        <Button className='login-button' onClick={this.submit.bind(this)} >登录</Button>\r\n        <Link to='/forget' className='to-forget'>重置密码?</Link>\r\n        {/* <Button to='/forget' className='to-forget'>重置密码?</Button> */}\r\n        {/* {this.state.hasAlert&&<AlertTip logout={()=> {return false}} closeTip={this.closeTip} alertText={this.state.alertText}/>} */}\r\n\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\n// const BasicInputExampleWrapper = createForm()(Login);\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userInfo: state.userInfo\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    saveUserInfo: (userInfo) => dispatch(saveUserInfo(userInfo))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Login)\r\n","import React, { Component } from 'react'\r\nimport { NavBar, Icon } from 'antd-mobile';\r\nimport './index.scss'\r\nexport default class Header extends Component {\r\n\r\n  handleBack = () => {\r\n    this.props.goBack()\r\n  }\r\n  render() {\r\n    return (\r\n      <header className=\"header-container\">\r\n        {this.props.goBack && <NavBar\r\n          mode=\"dark\"\r\n          icon={!this.props.icon ? <Icon type='left' />:<Icon type=\"search\" />}\r\n          onLeftClick={this.handleBack}\r\n        >{this.props.title}</NavBar>}\r\n      </header>\r\n    )\r\n  }\r\n}","// 全局配置\r\n\r\nlet baseUrl = ''\r\nlet imgUrl\r\nif (process.env.NODE_ENV === 'development') {\r\n    imgUrl = 'http://cangdu.org:8001/img/'\r\n} else if (process.env.NODE_ENV === 'production') {\r\n    baseUrl = '//elm.cangdu.org'\r\n    imgUrl = '//elm.cangdu.org/img/'\r\n}\r\n\r\nexport {\r\n    baseUrl,\r\n    imgUrl\r\n}","import axios from 'axios'\r\nimport { baseUrl } from '../config/envconfig'\r\n\r\n/**\r\n * @params method {string} 方法名\r\n * @params url {string} 请求地址  例如：/login 配合baseURL组成完整请求地址\r\n * @params baseURL {string} 请求地址统一前缀 ***需要提前指定***  例如：http://cangdu.org\r\n * @params timeout {number} 请求超时时间 默认 30000\r\n * @params params {object}  get方式传参key值\r\n * @params headers {string} 指定请求头信息\r\n * @params withCredentials {boolean} 请求是否携带本地cookies信息默认开启\r\n * @params validateStatus {func} 默认判断请求成功的范围 200 - 300\r\n * @return {Promise}\r\n * 其他更多拓展参看axios文档后 自行拓展\r\n * 注意：params中的数据会覆盖method url 参数，所以如果指定了这2个参数则不需要在params中带入\r\n */\r\nexport default class Server {\r\n    axios(method, url, data, params) {\r\n        const baseURL = 'http://elm.cangdu.org' + url;\r\n        return new Promise((resolve, reject) => {\r\n            let _option = {\r\n                method,\r\n                url: baseURL,\r\n                baseUrl: baseURL,\r\n                timeout: 30000,\r\n                params,\r\n                data,\r\n                headers: null,\r\n                withCredentials: true, //是否携带cookie发起请求\r\n                validateStatus: (status) => {\r\n                    return status >= 200 && status < 300\r\n                },\r\n            }\r\n            axios.request(_option).then(res => {\r\n                resolve(typeof res.data === 'object' ? res.data : JSON.parse(res.data))\r\n            }, error => {\r\n                if (error.response) {\r\n                    reject(error.response.data)\r\n                } else {\r\n                    reject(error)\r\n                }\r\n            })\r\n        })\r\n    }\r\n}","import Server from './server'\r\nimport { getUrlConcat } from '../utils/commons'\r\nclass API extends Server {\r\n    /**\r\n     *  用途：获取验证码\r\n     *  @url http://cangdu.org:8001/v1/captchas\r\n     *  返回status为1表示成功\r\n     *  @method get\r\n     *  @return {promise}\r\n     */\r\n    async getCaptchaCode() {\r\n            try {\r\n                let result = await this.axios('post', '/v1/captchas', {})\r\n                if (result.status === 1 && (result instanceof Object)) {\r\n                    return result || []\r\n                } else {\r\n                    let err = {\r\n                        tip: '获取验证码失败',\r\n                        response: result,\r\n                    }\r\n                    throw err\r\n                }\r\n            } catch (err) {\r\n                throw err\r\n            }\r\n        }\r\n        /**\r\n         *  用途：账号密码登录\r\n         *  @url http://cangdu.org:8001/v2/login\r\n         *  @method post\r\n         *  @return {promise}\r\n         */\r\n    async accountLogin(data) {\r\n        try {\r\n            let result = await this.axios('post', '/v2/login', data)\r\n            if (result.status !== 0 && (result instanceof Object)) {\r\n                return result || []\r\n            } else {\r\n                let err = {\r\n                    tip: '登录失败',\r\n                    response: result,\r\n                }\r\n                return err\r\n            }\r\n        } catch (err) {\r\n            throw err\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 获取用户消息\r\n     * @param {*}； \r\n     * get的拼接参数\r\n     */\r\n    async getUser(data) {\r\n        try {\r\n            let result = await this.axios('get', '/v1/user' + getUrlConcat(data))\r\n            if (result.status !== 0 && (result instanceof Object)) {\r\n                return result || []\r\n            } else {\r\n                let err = {\r\n                    tip: '获取用户信息失败',\r\n                    response: result,\r\n                }\r\n                throw err\r\n            }\r\n        } catch (err) {\r\n            throw err\r\n        }\r\n    }\r\n\r\n\r\n    async getHongbao(id, params) {\r\n        try {\r\n            console.info(params)\r\n            const result = await this.axios('get', '/promotion/v2/users/' + id + '/hongbaos', null, params)\r\n            return result\r\n        } catch (error) {\r\n\r\n        }\r\n    }\r\n\r\n    async getHistoryHongbao(id, params) {\r\n        try {\r\n            const result = await this.axios('get', '/promotion/v2/users/' + id + '/expired_hongbaos', null, params);\r\n            return result\r\n        } catch (err) {\r\n\r\n        }\r\n    }\r\n\r\n    /**\r\n     *  用途：退出登录\r\n     *  @url https://elm.cangdu.org/v2/signout\r\n     *  返回status为1表示成功\r\n     *  @method GET\r\n     *  @return {promise}\r\n     */\r\n    async changepassword(data) {\r\n        try {\r\n            let result = await this.axios('post', '/v2/changepassword', data);\r\n            if (result && result.status === 1) {\r\n                return result;\r\n            } else {\r\n                let err = {\r\n                    tip: result.message,\r\n                    response: result,\r\n                }\r\n                return err\r\n            }\r\n\r\n        } catch (error) {\r\n            throw error;\r\n        }\r\n    }\r\n    async loginOut() {\r\n        try {\r\n\r\n            let result = await this.axios('get', '/v2/signout');\r\n            if (result && result.status === 1) {\r\n                return result;\r\n            } else {\r\n                let err = {\r\n                    tip: '网络连接超时',\r\n                    response: result,\r\n                }\r\n                return err;\r\n            }\r\n        } catch (err) {\r\n            throw err;\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     *  用途：上传图片\r\n     *  @url https://elm.cangdu.org/v1/addimg/shop\r\n     *  返回status为1表示成功\r\n     *  @method post\r\n     *  @return {promise}\r\n     */\r\n    async uploadImg(data) {\r\n        try {\r\n            let result = await this.axios('post', '/v1/addimg/' + 'avatar', data);\r\n            if (result && result.status === 1) {\r\n                return result;\r\n            } else {\r\n                let err = {\r\n                    tip: '上传图片失败',\r\n                    response: result,\r\n                    url: '//elm.cangdu.org/v1/addimg/shop',\r\n                }\r\n                return err;\r\n            }\r\n        } catch (err) {\r\n            throw err;\r\n        }\r\n    }\r\n\r\n    /**\r\n     *  用途：获取用户地址列表\r\n     *  @url https://elm.cangdu.org/v1/addimg/shop\r\n     *  返回status为1表示成功\r\n     *  @method get\r\n     */\r\n    async getAddress(id) {\r\n            try {\r\n                let result = await this.axios('get', '/v1/users/' + id + '/addresses');\r\n                if (result) {\r\n                    return result;\r\n                } else {\r\n                    let err = {\r\n                        tip: '获取地址失败',\r\n                        response: result,\r\n                        url: '//elm.cangdu.org/v1/carts/addresses',\r\n                    }\r\n                    throw err;\r\n                }\r\n            } catch (err) {\r\n                throw err;\r\n            }\r\n        }\r\n        /**\r\n         *\r\n         *  用途: 搜索符合条件的地址\r\n         * @param {*} data\r\n         * @memberof API\r\n         */\r\n    async searchPois(data) {\r\n        try {\r\n            let result = await this.axios('get', '/v1/pois/' + getUrlConcat(data));\r\n            if (result) {\r\n                return result;\r\n            } else {\r\n                let err = {\r\n                    tip: '搜索地点失败',\r\n                    response: result,\r\n                    url: '//elm.cangdu.org/v1/carts/addresses',\r\n                }\r\n                throw err;\r\n            }\r\n        } catch (err) {\r\n            throw err;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 用途: 根据经纬度获取地点信息\r\n     * @param {*} data\r\n     * @memberof API\r\n     */\r\n    async getPoisSite(data) {\r\n        try {\r\n            let result = await this.axios('get', '/v2/pois/' + data);\r\n            if (result) {\r\n                return result;\r\n            } else {\r\n                let err = {\r\n                    tip: '获取地点失败',\r\n                    response: result,\r\n                    url: '//elm.cangdu.org/v1/carts/addresses',\r\n                }\r\n                throw err;\r\n            }\r\n        } catch (err) {\r\n            throw err;\r\n        }\r\n    }\r\n\r\n    /**\r\n     *用途: 获取食物种类\r\n     * @param {*} data\r\n     * @memberof API\r\n     */\r\n    async getFoodTypes(data) {\r\n        try {\r\n            let result = await this.axios('get', '/v2/index_entry/' + getUrlConcat(data));\r\n            if (result) {\r\n                return result;\r\n            } else {\r\n                let err = {\r\n                    tip: '获取食物种类失败',\r\n                    response: result,\r\n                    url: '//elm.cangdu.org/v1/carts/addresses',\r\n                }\r\n                throw err;\r\n            }\r\n        } catch (err) {\r\n            throw err;\r\n        }\r\n    }\r\n\r\n    /**\r\n     *用途: 猜测城市\r\n     * @param {*} keyword\r\n     * @memberof API\r\n     */\r\n    async cityGuess(keyword) {\r\n        try {\r\n            let result = await this.axios('get', '/v1/cities?type=guess');\r\n            if (result) {\r\n                return result;\r\n            } else {\r\n                let err = {\r\n                    tip: '城市失败',\r\n                    response: result,\r\n                    url: '//elm.cangdu.org/v1/carts/addresses',\r\n                }\r\n                throw err;\r\n            }\r\n        } catch (err) {\r\n            throw err;\r\n        }\r\n    }\r\n\r\n    /**\r\n     *用途: 获取商店列表\r\n     * @param {*} data\r\n     * @memberof API\r\n     */\r\n    async getShopList(data) {\r\n        try {\r\n            let result = await this.axios('get', '/shopping/restaurants' + getUrlConcat(data));\r\n            if (result) {\r\n                return result;\r\n            } else {\r\n                let err = {\r\n                    tip: '获取商店列表失败',\r\n                    response: result,\r\n                    url: '//elm.cangdu.org/v1/carts/addresses',\r\n                }\r\n                throw err;\r\n            }\r\n        } catch (err) {\r\n            throw err;\r\n        }\r\n    }\r\n\r\n    /**\r\n     *用途: 获取商店详情\r\n     * @param {*} id\r\n     * @param {*} data\r\n     * @memberof API\r\n     */\r\n    async shopDetails(id, data) {\r\n        try {\r\n            let result = await this.axios('get', '/shopping/restaurant/' + id + getUrlConcat(data));\r\n            if (result) {\r\n                return result;\r\n            } else {\r\n                let err = {\r\n                    tip: '获取商店详情失败',\r\n                    response: result,\r\n                    url: '//elm.cangdu.org/v1/carts/addresses',\r\n                }\r\n                throw err;\r\n            }\r\n        } catch (err) {\r\n            throw err;\r\n        }\r\n    }\r\n\r\n    /**\r\n     *用途: 获取食物清单\r\n     * @param {*} data\r\n     * @memberof API\r\n     */\r\n    async getfoodMenu(data) {\r\n        try {\r\n            let result = await this.axios('get', '/shopping/v2/menu/' + getUrlConcat(data));\r\n            if (result) {\r\n                return result;\r\n            } else {\r\n                let err = {\r\n                    tip: '获取商店详情失败',\r\n                    response: result,\r\n                    url: '//elm.cangdu.org/v1/carts/addresses',\r\n                }\r\n                throw err;\r\n            }\r\n        } catch (err) {\r\n            throw err;\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default new API();","import * as user from './action-type'\r\n\r\n// 保存用户消息\r\nexport const saveUserInfo = (userInfo) => {\r\n    return {\r\n        type: user.SAVE_USERINFO,\r\n        userInfo\r\n    }\r\n}\r\n\r\n// 修改用户信息\r\nexport const saveAttrInfo = (datatype, value) => {\r\n    return {\r\n        type: user.SAVE_ATTRINFO,\r\n        datatype,\r\n        value,\r\n    }\r\n}\r\n\r\n// 修改用户信息\r\nexport const modifyUserInfo = (key, value) => {\r\n    return {\r\n        type: user.MODIFY_USERINFO,\r\n        key,\r\n        value\r\n    }\r\n}"],"sourceRoot":""}