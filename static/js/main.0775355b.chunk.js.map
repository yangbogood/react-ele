{"version":3,"sources":["store/userInfo/action-type.js","store/shop/action-type.js","utils/commons.js","store/userInfo/reducer.js","store/shop/reducer.js","store/index.js","config/rem.js","utils/asyncComponent.jsx","router/index.jsx","App.jsx","serviceWorker.js","index.js"],"names":["SAVE_USERINFO","SAVE_ATTRINFO","MODIFY_USERINFO","ADD_TO_CART","CLEAR_CART_FOOD_LIST","REDUCE_CART","setStore","name","content","JSON","stringify","window","localStorage","setItem","getStore","parse","getItem","removeStore","removeItem","getUrlConcat","data","dataStr","url","Object","keys","forEach","key","substr","lastIndexOf","userInfo","defaultState","addressList","addressName","temMessage","hasAddressList","operate","geohash","userInfoData","state","action","type","user","datatype","value","cartFoodList","shopData","shop","cart","shops","shopid","category","category_id","item","item_id","food_id","price","specs","packing_fee","sku_id","stock","store","createStore","combineReducers","applyMiddleware","thunk","doc","win","docEl","documentElement","resizeEvt","recalc","clientWidth","style","fontSize","addEventListener","document","asyncComponent","importComponent","props","component","default","this","setState","C","Component","Login","console","info","Profile","Forget","Info","Balance","SetUser","Hbhistory","Download","Search","Msite","Shop","Order","Food","RouterConfig","path","exact","from","to","App","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0775355b.chunk.js","sourcesContent":["// 保存用户数据\r\nexport const SAVE_USERINFO = 'SAVE_USERINFO'\r\n\r\n// 保存用户信息\r\nexport const SAVE_ATTRINFO = 'SAVE_ATTRINFO'\r\n\r\n// 修改用信息\r\nexport const MODIFY_USERINFO = 'MODIFY_USERINFO'","// 修改用信息\r\nexport const ADD_TO_CART = 'ADD_TO_CART'\r\n\r\nexport const CLEAR_CART_FOOD_LIST = \"CLEAR_CART_FOOD_LIST\"\r\n\r\n\r\nexport const REDUCE_CART = 'REDUCE_CART'","/**\r\n * 存储localStoage\r\n * @param {*} name \r\n * @param {*} content \r\n */\r\nexport const setStore = (name, content) => {\r\n    if (!name) return\r\n    if (typeof content !== 'string') {\r\n        content = JSON.stringify(content)\r\n    }\r\n    window.localStorage.setItem(name, content)\r\n}\r\n\r\n/**\r\n * 获取localStorage\r\n * @param {*} name \r\n */\r\nexport const getStore = name => {\r\n    if (!name) return\r\n    return JSON.parse(window.localStorage.getItem(name))\r\n}\r\n\r\n/**\r\n * 删除localStorage\r\n * @param {*} name \r\n */\r\nexport const removeStore = name => {\r\n    if (!name) return\r\n    window.localStorage.removeItem(name)\r\n}\r\n\r\n\r\n/**\r\n * 用于get方法后面参数的拼接，传入data是对象\r\n * @param {*} name \r\n */\r\nexport const getUrlConcat = function(data) {\r\n    let dataStr = ''; //数据拼接字符串\r\n    let url = ''\r\n    Object.keys(data).forEach(key => {\r\n        dataStr += key + '=' + data[key] + '&';\r\n    })\r\n    if (dataStr !== '') {\r\n        dataStr = dataStr.substr(0, dataStr.lastIndexOf('&')); // 去除掉最后一个\"&\"字符\r\n        url = url + '?' + dataStr;\r\n    }\r\n    return url\r\n}\r\n\r\n/**\r\n * 处理图片路径\r\n */\r\nexport const getImgPath = (path) => {\r\n    //传递过来的图片地址需要处理后才能正常使用(path) {\r\n    let suffix;\r\n    if (!path) {\r\n        return '//elm.cangdu.org/img/default.jpg'\r\n    }\r\n    if (path.indexOf('jpeg') !== -1) {\r\n        suffix = '.jpeg'\r\n    } else {\r\n        suffix = '.png'\r\n    }\r\n    let url = '/' + path.substr(0, 1) + '/' + path.substr(1, 2) + '/' + path.substr(3) + suffix;\r\n    return 'https://fuss10.elemecdn.com' + url\r\n}","import * as user from './action-type'\r\nimport { getStore } from '../../utils/commons'\r\nlet userInfo = getStore('userInfo') || {};\r\nif (typeof userInfo === 'string') {\r\n    userInfo = JSON.parse(userInfo);\r\n}\r\n\r\n\r\nlet defaultState = {\r\n    addressList: [], // 地址列表\r\n    addressName: '', // 选中的地址\r\n    temMessage: '', //临时姓名\r\n    hasAddressList: [], // 已有的地址\r\n    operate: 'edit',\r\n    userInfo: userInfo,\r\n    geohash: [],\r\n\r\n}\r\n\r\n// 用户消息\r\nexport const userInfoData = (state = defaultState, action) => {\r\n    switch (action.type) {\r\n        case user.SAVE_USERINFO:\r\n            return {\r\n                ...state,\r\n                userInfo: action.userInfo\r\n            }\r\n        case user.SAVE_ATTRINFO:\r\n            return {...state,\r\n                ... {\r\n                    [action.datatype]: action.value\r\n                }\r\n            };\r\n        case user.MODIFY_USERINFO:\r\n            return {...state, userInfo: {...state.userInfo, [action.key]: action.value } };\r\n        default:\r\n            return state\r\n    }\r\n}","import * as shop from './action-type';\r\n\r\n\r\nlet defaultState = {\r\n    cartFoodList: {}\r\n}\r\n\r\n// 用户消息\r\nexport const shopData = (state = defaultState, action = {}) => {\r\n    switch (action.type) {\r\n        case shop.ADD_TO_CART:\r\n            let cart = state.cartFoodList;\r\n            let shops = cart[action.value.shopid] = (cart[action.value.shopid] || {});\r\n            let category = shops[action.value.category_id] = (shops[action.value.category_id] || {});\r\n            let item = category[action.value.item_id] = (category[action.value.item_id] || {});\r\n            if (item[action.value.food_id]) {\r\n                item[action.value.food_id]['num']++;\r\n            } else {\r\n                item[action.value.food_id] = {\r\n                    \"num\": 1,\r\n                    \"food_id\": action.value.food_id,\r\n                    \"name\": action.value.name,\r\n                    \"price\": action.value.price,\r\n                    \"specs\": action.value.specs,\r\n                    \"packing_fee\": action.value.packing_fee,\r\n                    \"sku_id\": action.value.sku_id,\r\n                    \"stock\": action.value.stock\r\n                };\r\n            }\r\n            state.cartFoodList = {...cart };\r\n            return {\r\n                ...state,\r\n                cartFoodList: state.cartFoodList\r\n            };\r\n        case shop.REDUCE_CART:\r\n\r\n        case shop.CLEAR_CART_FOOD_LIST:\r\n            return {...state, cartFoodList: {} }\r\n        default:\r\n            return state\r\n    }\r\n}","import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport * as userInfoData from './userInfo/reducer';\r\nimport * as shopData from './shop/reducer';\r\nlet store = createStore(\r\n    combineReducers({...userInfoData, ...shopData }),\r\n    applyMiddleware(thunk)\r\n)\r\n\r\nexport default store;","(function (doc, win) {  // 自适应\r\n  var docEl = doc.documentElement,\r\n    resizeEvt = 'orientationchange' in window ? 'orientationchange' : 'resize',\r\n    recalc = function () {\r\n      var clientWidth = docEl.clientWidth;\r\n      if (!clientWidth) return;\r\n      docEl.style.fontSize = 20 * (clientWidth / 320) + 'px'; // 放下16个字\r\n    };\r\n  if (!doc.addEventListener) return;\r\n  win.addEventListener(resizeEvt, recalc, false);\r\n  doc.addEventListener('DOMContentLoaded', recalc, false);\r\n})(document, window);","import React, { Component } from \"react\";\r\n/**\r\n * 异步加载模块\r\n * @param {*} importComponent \r\n */\r\nexport default function asyncComponent(importComponent) {\r\n  class AsyncComponent extends Component {\r\n    constructor(props) {\r\n      super(props);\r\n\r\n      this.state = {\r\n        component: null\r\n      };\r\n    }\r\n\r\n    async componentDidMount() {\r\n      const { default: component } = await importComponent();\r\n\r\n      this.setState({ component });\r\n    }\r\n\r\n    render() {\r\n      const C = this.state.component;\r\n\r\n      return C ? <C {...this.props} /> : null;\r\n    }\r\n  }\r\n  return AsyncComponent;\r\n}","import React, { Component } from 'react';\r\nimport { HashRouter, Switch, Route, Redirect } from 'react-router-dom';\r\nimport asyncComponent from '../utils/asyncComponent';\r\nconst Login = asyncComponent(() => import(\"../pages/login/index.jsx\"));\r\nconsole.info(Login)\r\nconst Profile = asyncComponent(() => import(\"../pages/profile/index.jsx\"));\r\nconst Forget = asyncComponent(() => import(\"../pages/forget/index.jsx\"));\r\nconst Info = asyncComponent(() => import(\"../pages/info/index.jsx\"));\r\nconst Balance = asyncComponent(() => import(\"../pages/balance/index.jsx\"));\r\nconst SetUser = asyncComponent(() => import(\"../pages/set_user/index.jsx\"));\r\nconst Hbhistory = asyncComponent(() => import(\"../pages/hbHistory/index\"));\r\nconst Download = asyncComponent(() => import(\"../pages/download/index.jsx\"));\r\nconst Search = asyncComponent(() => import(\"../pages/search/index.jsx\"));\r\nconst Msite = asyncComponent(() => import(\"../pages/msite/index.jsx\"));\r\nconst Shop = asyncComponent(() => import(\"../pages/shop/index.jsx\"));\r\nconst Order = asyncComponent(() => import(\"../pages/order/index.jsx\"));\r\nconst Food = asyncComponent(() => import(\"../pages/food/index.jsx\"))\r\n// import Login from '../pages/login/index.jsx';\r\n// import Profile from '../pages/profile/index.jsx';\r\n// import Forget from '../pages/forget/index.jsx';\r\n// import Info from '../pages/info/index.jsx';\r\n// import Balance from '../pages/balance/index.jsx';\r\n// import SetUser from '../pages/set_user/index.jsx';\r\n// import Hbhistory from '../pages/hbHistory/index';\r\n// import Download from '../pages/download/index.jsx';\r\n// import Search from \"../pages/search/index.jsx\";\r\n// import Msite from \"../pages/msite/index.jsx\";\r\n// import Shop from '../pages/shop/index.jsx'\r\n// import Order from '../pages/order/index'\r\nexport default class RouterConfig extends Component {\r\n    render() {\r\n        return (<HashRouter >\r\n            <Switch>\r\n                <Route path=\"/food\" component={Food} />\r\n                <Route path=\"/msite\" component={Msite} />\r\n                <Route path=\"/order\" component={Order} />\r\n                <Route path=\"/shop/:id\" component={Shop} />\r\n                <Route path=\"/search\" component={Search} />\r\n                <Route path='/login' component={Login} />\r\n                <Route path='/profile' component={Profile} />\r\n                <Route path='/forget' component={Forget} />\r\n                <Route path='/setUser' component={SetUser} />\r\n                <Route path='/info' component={Info} />\r\n                <Route path='/balance' exact component={Balance} />\r\n                <Route path='/download' exact component={Download} />\r\n                <Route path='/balance/hbHistory' component={Hbhistory} />\r\n                <Redirect exact from='/' to='/profile' />\r\n            </Switch>\r\n        </HashRouter>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport RouterConfig from './router/index.jsx'\r\nimport './App.css';\r\n\r\nfunction App() {\r\n    return (<div className=\"App\">\r\n        <RouterConfig />\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === '10.9.177.252' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n            return;\r\n        }\r\n\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let's check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config);\r\n\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        'This web app is being served cache-first by a service ' +\r\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n                    );\r\n                });\r\n            } else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then(registration => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing;\r\n                if (installingWorker == null) {\r\n                    return;\r\n                }\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === 'installed') {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the updated precached content has been fetched,\r\n                            // but the previous service worker will still serve the older\r\n                            // content until all client tabs are closed.\r\n                            console.log(\r\n                                'New content is available and will be used when all ' +\r\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n                            );\r\n\r\n                            // Execute callback\r\n                            if (config && config.onUpdate) {\r\n                                config.onUpdate(registration);\r\n                            }\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log('Content is cached for offline use.');\r\n\r\n                            // Execute callback\r\n                            if (config && config.onSuccess) {\r\n                                config.onSuccess(registration);\r\n                            }\r\n                        }\r\n                    }\r\n                };\r\n            };\r\n        })\r\n        .catch(error => {\r\n            console.error('Error during service worker registration:', error);\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl)\r\n        .then(response => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get('content-type');\r\n            if (\r\n                response.status === 404 ||\r\n                (contentType != null && contentType.indexOf('javascript') === -1)\r\n            ) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then(registration => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload();\r\n                    });\r\n                });\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log(\r\n                'No internet connection found. App is running in offline mode.'\r\n            );\r\n        });\r\n}\r\n\r\nexport function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready.then(registration => {\r\n            registration.unregister();\r\n        });\r\n    }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App.jsx';\r\n\r\n\r\nimport RouterConfig from './router/index.jsx'\r\nimport store from './store/index.js'\r\nimport { Provider } from 'react-redux'\r\nimport { AppContainer } from 'react-hot-loader'\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport './config/rem';\r\nimport './style/base.scss'\r\nimport 'antd-mobile/dist/antd-mobile.css';\r\nconst render = Component => {\r\n    ReactDOM.render( < Provider store = { store } >\r\n        <\r\n        AppContainer >\r\n        <\r\n        Component / >\r\n        <\r\n        /AppContainer> </Provider > , document.getElementById('root'))\r\n};\r\n\r\n\r\nrender(RouterConfig);\r\n\r\nserviceWorker.unregister();"],"sourceRoot":""}