{"version":3,"sources":["components/alert_tip/index.jsx","pages/forget/index.jsx","components/header/index.jsx","config/envconfig.js","api/server.js","api/api.js"],"names":["AlertTip","handleClick","props","closeTip","handleLogout","logout","className","this","alertText","onClick","Component","Forget","state","title","hasError","username","userInfo","oldPassword","newPassword","agaiNewPassword","code","imgCodePath","hasAlert","onErrorClick","Toast","info","getCaptchaCode","a","API","res","setState","changepassword","sendObj","oldpassWord","newpassword","confirmpassword","againNewPassword","captcha_code","tip","success","history","push","goBack","value","replace","length","userName","password","bind","type","placeholder","error","onChange","val","maxLength","src","alt","submit","connect","dispatch","Header","handleBack","mode","icon","onLeftClick","imgUrl","Server","method","url","data","params","baseURL","Promise","resolve","reject","_option","baseUrl","timeout","headers","withCredentials","validateStatus","status","axios","request","then","JSON","parse","response","result","Object","err","getUrlConcat","id","console","message","keyword"],"mappings":"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","file":"static/js/13.b483b1b5.chunk.js","sourcesContent":["import React, {Component} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport './index.scss'\r\n\r\nclass AlertTip extends Component {\r\n  static propTypes = {\r\n    alertText: PropTypes.string.isRequired,  // 提示内容\r\n    closeTip: PropTypes.func.isRequired,   // 关闭\r\n    logout: PropTypes.func   // 退出\r\n  }\r\n  handleClick = () => {  // 关闭\r\n    this.props.closeTip()\r\n  }\r\n  handleLogout = () => {  // 退出登录\r\n    this.props.logout()\r\n  }\r\n  render () {\r\n    return (\r\n      <div className='alert-container'>\r\n        <section className='tip-text-container'>\r\n          <div className='tip-icon'>\r\n            <span></span>\r\n            <span></span>\r\n          </div>\r\n          <div className='tip-text'>{this.props.alertText}</div>\r\n          {this.props.logout('wait')? \r\n            <div className='logout' >\r\n              <div onClick={this.handleClick}>再等等</div>\r\n              <div onClick={this.handleLogout}>狠心离开</div>\r\n            </div>\r\n            :<div className='confirm' onClick={this.handleClick}>确认</div>}\r\n          \r\n        </section>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default AlertTip","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport Header from './../../components/header/index.jsx';\r\nimport Alert from './../../components/alert_tip/index.jsx'\r\nimport { List, InputItem, Toast, Switch, Button} from 'antd-mobile';\r\nimport { getImgPath } from '../../utils/commons'\r\nimport { createForm } from 'rc-form';\r\nimport API from '../../api/api'\r\nimport './index.scss'\r\nimport { async } from 'q';\r\n\r\n\r\nclass Forget extends Component {\r\n  state = {\r\n    title: '密码登录',\r\n    hasError: false,\r\n    username: this.props.userInfo.username,\r\n    oldPassword: '',\r\n    newPassword: '',\r\n    agaiNewPassword: '',\r\n    code: '',\r\n    imgCodePath: '',\r\n    hasAlert: false,\r\n    alertText: '',\r\n  }\r\n  goBack() {\r\n    this.props.history.goBack()\r\n  }\r\n\r\n  onErrorClick = () => {\r\n    if (this.state.hasError) {\r\n      Toast.info('Please enter 11 digits');\r\n    }\r\n  }\r\n  onChange(value) {\r\n\r\n    if (value.replace(/\\s/g, '').length < 11) {\r\n      this.setState({\r\n        hasError: true,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        hasError: false,\r\n      });\r\n    }\r\n    this.setState({\r\n      userName: value,\r\n    });\r\n  }\r\n  onChangePassWord(value) {\r\n    this.setState({\r\n      password: value,\r\n    });\r\n  }\r\n\r\n  onChangeCode(value) {\r\n\r\n  }\r\n\r\n  getCaptchaCode = async () => {\r\n    let res = await API.getCaptchaCode()\r\n    this.setState({\r\n      imgCodePath: res.code\r\n    })\r\n  }\r\n  submit() {\r\n    if (this.state.userName === '') {\r\n      this.setState({\r\n        hasAlert: !this.state.hasAlert\r\n      })\r\n      this.state.alertText = \"请输入账号\"\r\n    } else if (this.state.oldPassword === '') {\r\n      this.setState({\r\n        hasAlert: !this.state.hasAlert\r\n      })\r\n      this.state.alertText = \"请输入密码\"\r\n    }\r\n    this.changepassword()\r\n  }\r\n\r\n  changepassword = async () => {\r\n    const sendObj = {\r\n      username: this.state.username,\r\n      oldpassWord: this.state.oldPassword,\r\n      newpassword: this.state.newPassword,\r\n      confirmpassword: this.state.againNewPassword,\r\n      captcha_code:this.state.code\r\n    }\r\n    const res = await API.changepassword(sendObj);\r\n    if (res.tip) {\r\n      this.state.alertText =res.tip;\r\n      this.setState({\r\n        hasAlert: !this.state.hasAlert\r\n      })\r\n    } else {\r\n      Toast.success('密码修改成功，请重新登录', 2);\r\n    this.props.history.push('/login')\r\n    }\r\n    \r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getCaptchaCode()\r\n    this.setState({\r\n      username: this.props.userInfo.username\r\n    })\r\n  }\r\n\r\n  closeTip() {\r\n    this.setState({\r\n      hasAlert: !this.state.hasAlert\r\n    })\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"login-container\">\r\n        {this.state.hasAlert && <Alert logout={() => { return false }} closeTip={this.closeTip.bind(this)} alertText={this.state.alertText} />}\r\n        <Header title={this.state.title} goBack={this.goBack.bind(this)} />\r\n        <div className=\"login-form\">\r\n          {!this.props.userInfo.username && <List >\r\n            <InputItem\r\n              type=\"text\"\r\n              placeholder=\"账号\"\r\n              error={this.state.hasError}\r\n              onErrorClick={this.onErrorClick.bind(this)}\r\n              onChange={this.onChange.bind(this)}\r\n              value={this.state.username}\r\n            ></InputItem>\r\n          </List>}\r\n          <List >\r\n            <InputItem\r\n\r\n              type=\"password\"\r\n              placeholder=\"旧密码\"\r\n              onErrorClick={this.onErrorClick.bind(this)}\r\n              onChange={(val) => {\r\n                this.setState({\r\n                  oldPassword: val\r\n                })\r\n              }}\r\n              value={this.state.oldPassword}\r\n            ></InputItem>\r\n          </List>\r\n          <List >\r\n            <InputItem\r\n\r\n              type=\"password\"\r\n              placeholder=\"新密码\"\r\n              onErrorClick={this.onErrorClick.bind(this)}\r\n              onChange={(val) => {\r\n                this.setState({\r\n                  newPassword: val\r\n                })\r\n              }}\r\n              value={this.state.newPassword}\r\n            ></InputItem>\r\n          </List>\r\n          <List >\r\n            <InputItem\r\n\r\n              type=\"password\"\r\n              placeholder=\"确认新密码\"\r\n              onErrorClick={this.onErrorClick.bind(this)}\r\n              onChange={(val) => {\r\n                this.setState({\r\n                  againNewPassword: val\r\n                })\r\n              }}\r\n              value={this.state.againNewPassword}\r\n            ></InputItem>\r\n          </List>\r\n\r\n          <List className='input-container captcha-code-container'>\r\n            <InputItem\r\n              type=\"number\"\r\n              maxLength={4}\r\n              placeholder=\"验证码\"\r\n              onErrorClick={this.onErrorClick.bind(this)}\r\n              onChange={(val) => {\r\n                this.setState({\r\n                  code: val\r\n                })\r\n              }}\r\n              value={this.state.code}\r\n            ></InputItem>\r\n            <div className='img-change-img'>\r\n              <img src={this.state.imgCodePath} alt=\"img is wrong\" />\r\n              <div className='change-img' onClick={this.getCaptchaCode.bind(this)}>\r\n                <p>看不清</p>\r\n                <p>换一张</p>\r\n              </div>\r\n            </div>\r\n          </List>\r\n\r\n        </div>\r\n        <Button className='login-button' onClick={this.submit.bind(this)}>确认修改</Button>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userInfo: state.userInfo\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Forget)","import React, { Component } from 'react'\r\nimport { NavBar, Icon } from 'antd-mobile';\r\nimport './index.scss'\r\nexport default class Header extends Component {\r\n\r\n  handleBack = () => {\r\n    this.props.goBack()\r\n  }\r\n  render() {\r\n    return (\r\n      <header className=\"header-container\">\r\n        {this.props.goBack && <NavBar\r\n          mode=\"dark\"\r\n          icon={!this.props.icon ? <Icon type='left' />:<Icon type=\"search\" />}\r\n          onLeftClick={this.handleBack}\r\n        >{this.props.title}</NavBar>}\r\n      </header>\r\n    )\r\n  }\r\n}","// 全局配置\r\n\r\nlet baseUrl = ''\r\nlet imgUrl\r\nif (process.env.NODE_ENV === 'development') {\r\n    imgUrl = 'http://cangdu.org:8001/img/'\r\n} else if (process.env.NODE_ENV === 'production') {\r\n    baseUrl = '//elm.cangdu.org'\r\n    imgUrl = '//elm.cangdu.org/img/'\r\n}\r\n\r\nexport {\r\n    baseUrl,\r\n    imgUrl\r\n}","import axios from 'axios'\r\nimport { baseUrl } from '../config/envconfig'\r\n\r\n/**\r\n * @params method {string} 方法名\r\n * @params url {string} 请求地址  例如：/login 配合baseURL组成完整请求地址\r\n * @params baseURL {string} 请求地址统一前缀 ***需要提前指定***  例如：http://cangdu.org\r\n * @params timeout {number} 请求超时时间 默认 30000\r\n * @params params {object}  get方式传参key值\r\n * @params headers {string} 指定请求头信息\r\n * @params withCredentials {boolean} 请求是否携带本地cookies信息默认开启\r\n * @params validateStatus {func} 默认判断请求成功的范围 200 - 300\r\n * @return {Promise}\r\n * 其他更多拓展参看axios文档后 自行拓展\r\n * 注意：params中的数据会覆盖method url 参数，所以如果指定了这2个参数则不需要在params中带入\r\n */\r\nexport default class Server {\r\n    axios(method, url, data, params) {\r\n        const baseURL = 'http://elm.cangdu.org' + url;\r\n        return new Promise((resolve, reject) => {\r\n            let _option = {\r\n                method,\r\n                url: baseURL,\r\n                baseUrl: baseURL,\r\n                timeout: 30000,\r\n                params,\r\n                data,\r\n                headers: null,\r\n                withCredentials: true, //是否携带cookie发起请求\r\n                validateStatus: (status) => {\r\n                    return status >= 200 && status < 300\r\n                },\r\n            }\r\n            axios.request(_option).then(res => {\r\n                resolve(typeof res.data === 'object' ? res.data : JSON.parse(res.data))\r\n            }, error => {\r\n                if (error.response) {\r\n                    reject(error.response.data)\r\n                } else {\r\n                    reject(error)\r\n                }\r\n            })\r\n        })\r\n    }\r\n}","import Server from './server'\r\nimport { getUrlConcat } from '../utils/commons'\r\nclass API extends Server {\r\n    /**\r\n     *  用途：获取验证码\r\n     *  @url http://cangdu.org:8001/v1/captchas\r\n     *  返回status为1表示成功\r\n     *  @method get\r\n     *  @return {promise}\r\n     */\r\n    async getCaptchaCode() {\r\n            try {\r\n                let result = await this.axios('post', '/v1/captchas', {})\r\n                if (result.status === 1 && (result instanceof Object)) {\r\n                    return result || []\r\n                } else {\r\n                    let err = {\r\n                        tip: '获取验证码失败',\r\n                        response: result,\r\n                    }\r\n                    throw err\r\n                }\r\n            } catch (err) {\r\n                throw err\r\n            }\r\n        }\r\n        /**\r\n         *  用途：账号密码登录\r\n         *  @url http://cangdu.org:8001/v2/login\r\n         *  @method post\r\n         *  @return {promise}\r\n         */\r\n    async accountLogin(data) {\r\n        try {\r\n            let result = await this.axios('post', '/v2/login', data)\r\n            if (result.status !== 0 && (result instanceof Object)) {\r\n                return result || []\r\n            } else {\r\n                let err = {\r\n                    tip: '登录失败',\r\n                    response: result,\r\n                }\r\n                return err\r\n            }\r\n        } catch (err) {\r\n            throw err\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 获取用户消息\r\n     * @param {*}； \r\n     * get的拼接参数\r\n     */\r\n    async getUser(data) {\r\n        try {\r\n            let result = await this.axios('get', '/v1/user' + getUrlConcat(data))\r\n            if (result.status !== 0 && (result instanceof Object)) {\r\n                return result || []\r\n            } else {\r\n                let err = {\r\n                    tip: '获取用户信息失败',\r\n                    response: result,\r\n                }\r\n                throw err\r\n            }\r\n        } catch (err) {\r\n            throw err\r\n        }\r\n    }\r\n\r\n\r\n    async getHongbao(id, params) {\r\n        try {\r\n            console.info(params)\r\n            const result = await this.axios('get', '/promotion/v2/users/' + id + '/hongbaos', null, params)\r\n            return result\r\n        } catch (error) {\r\n\r\n        }\r\n    }\r\n\r\n    async getHistoryHongbao(id, params) {\r\n        try {\r\n            const result = await this.axios('get', '/promotion/v2/users/' + id + '/expired_hongbaos', null, params);\r\n            return result\r\n        } catch (err) {\r\n\r\n        }\r\n    }\r\n\r\n    /**\r\n     *  用途：退出登录\r\n     *  @url https://elm.cangdu.org/v2/signout\r\n     *  返回status为1表示成功\r\n     *  @method GET\r\n     *  @return {promise}\r\n     */\r\n    async changepassword(data) {\r\n        try {\r\n            let result = await this.axios('post', '/v2/changepassword', data);\r\n            if (result && result.status === 1) {\r\n                return result;\r\n            } else {\r\n                let err = {\r\n                    tip: result.message,\r\n                    response: result,\r\n                }\r\n                return err\r\n            }\r\n\r\n        } catch (error) {\r\n            throw error;\r\n        }\r\n    }\r\n    async loginOut() {\r\n        try {\r\n\r\n            let result = await this.axios('get', '/v2/signout');\r\n            if (result && result.status === 1) {\r\n                return result;\r\n            } else {\r\n                let err = {\r\n                    tip: '网络连接超时',\r\n                    response: result,\r\n                }\r\n                return err;\r\n            }\r\n        } catch (err) {\r\n            throw err;\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     *  用途：上传图片\r\n     *  @url https://elm.cangdu.org/v1/addimg/shop\r\n     *  返回status为1表示成功\r\n     *  @method post\r\n     *  @return {promise}\r\n     */\r\n    async uploadImg(data) {\r\n        try {\r\n            let result = await this.axios('post', '/v1/addimg/' + 'avatar', data);\r\n            if (result && result.status === 1) {\r\n                return result;\r\n            } else {\r\n                let err = {\r\n                    tip: '上传图片失败',\r\n                    response: result,\r\n                    url: '//elm.cangdu.org/v1/addimg/shop',\r\n                }\r\n                return err;\r\n            }\r\n        } catch (err) {\r\n            throw err;\r\n        }\r\n    }\r\n\r\n    /**\r\n     *  用途：获取用户地址列表\r\n     *  @url https://elm.cangdu.org/v1/addimg/shop\r\n     *  返回status为1表示成功\r\n     *  @method get\r\n     */\r\n    async getAddress(id) {\r\n            try {\r\n                let result = await this.axios('get', '/v1/users/' + id + '/addresses');\r\n                if (result) {\r\n                    return result;\r\n                } else {\r\n                    let err = {\r\n                        tip: '获取地址失败',\r\n                        response: result,\r\n                        url: '//elm.cangdu.org/v1/carts/addresses',\r\n                    }\r\n                    throw err;\r\n                }\r\n            } catch (err) {\r\n                throw err;\r\n            }\r\n        }\r\n        /**\r\n         *\r\n         *  用途: 搜索符合条件的地址\r\n         * @param {*} data\r\n         * @memberof API\r\n         */\r\n    async searchPois(data) {\r\n        try {\r\n            let result = await this.axios('get', '/v1/pois/' + getUrlConcat(data));\r\n            if (result) {\r\n                return result;\r\n            } else {\r\n                let err = {\r\n                    tip: '搜索地点失败',\r\n                    response: result,\r\n                    url: '//elm.cangdu.org/v1/carts/addresses',\r\n                }\r\n                throw err;\r\n            }\r\n        } catch (err) {\r\n            throw err;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 用途: 根据经纬度获取地点信息\r\n     * @param {*} data\r\n     * @memberof API\r\n     */\r\n    async getPoisSite(data) {\r\n        try {\r\n            let result = await this.axios('get', '/v2/pois/' + data);\r\n            if (result) {\r\n                return result;\r\n            } else {\r\n                let err = {\r\n                    tip: '获取地点失败',\r\n                    response: result,\r\n                    url: '//elm.cangdu.org/v1/carts/addresses',\r\n                }\r\n                throw err;\r\n            }\r\n        } catch (err) {\r\n            throw err;\r\n        }\r\n    }\r\n\r\n    /**\r\n     *用途: 获取食物种类\r\n     * @param {*} data\r\n     * @memberof API\r\n     */\r\n    async getFoodTypes(data) {\r\n        try {\r\n            let result = await this.axios('get', '/v2/index_entry/' + getUrlConcat(data));\r\n            if (result) {\r\n                return result;\r\n            } else {\r\n                let err = {\r\n                    tip: '获取食物种类失败',\r\n                    response: result,\r\n                    url: '//elm.cangdu.org/v1/carts/addresses',\r\n                }\r\n                throw err;\r\n            }\r\n        } catch (err) {\r\n            throw err;\r\n        }\r\n    }\r\n\r\n    /**\r\n     *用途: 猜测城市\r\n     * @param {*} keyword\r\n     * @memberof API\r\n     */\r\n    async cityGuess(keyword) {\r\n        try {\r\n            let result = await this.axios('get', '/v1/cities?type=guess');\r\n            if (result) {\r\n                return result;\r\n            } else {\r\n                let err = {\r\n                    tip: '城市失败',\r\n                    response: result,\r\n                    url: '//elm.cangdu.org/v1/carts/addresses',\r\n                }\r\n                throw err;\r\n            }\r\n        } catch (err) {\r\n            throw err;\r\n        }\r\n    }\r\n\r\n    /**\r\n     *用途: 获取商店列表\r\n     * @param {*} data\r\n     * @memberof API\r\n     */\r\n    async getShopList(data) {\r\n        try {\r\n            let result = await this.axios('get', '/shopping/restaurants' + getUrlConcat(data));\r\n            if (result) {\r\n                return result;\r\n            } else {\r\n                let err = {\r\n                    tip: '获取商店列表失败',\r\n                    response: result,\r\n                    url: '//elm.cangdu.org/v1/carts/addresses',\r\n                }\r\n                throw err;\r\n            }\r\n        } catch (err) {\r\n            throw err;\r\n        }\r\n    }\r\n\r\n    /**\r\n     *用途: 获取商店详情\r\n     * @param {*} id\r\n     * @param {*} data\r\n     * @memberof API\r\n     */\r\n    async shopDetails(id, data) {\r\n        try {\r\n            let result = await this.axios('get', '/shopping/restaurant/' + id + getUrlConcat(data));\r\n            if (result) {\r\n                return result;\r\n            } else {\r\n                let err = {\r\n                    tip: '获取商店详情失败',\r\n                    response: result,\r\n                    url: '//elm.cangdu.org/v1/carts/addresses',\r\n                }\r\n                throw err;\r\n            }\r\n        } catch (err) {\r\n            throw err;\r\n        }\r\n    }\r\n\r\n    /**\r\n     *用途: 获取食物清单\r\n     * @param {*} data\r\n     * @memberof API\r\n     */\r\n    async getfoodMenu(data) {\r\n        try {\r\n            let result = await this.axios('get', '/shopping/v2/menu/' + getUrlConcat(data));\r\n            if (result) {\r\n                return result;\r\n            } else {\r\n                let err = {\r\n                    tip: '获取商店详情失败',\r\n                    response: result,\r\n                    url: '//elm.cangdu.org/v1/carts/addresses',\r\n                }\r\n                throw err;\r\n            }\r\n        } catch (err) {\r\n            throw err;\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default new API();"],"sourceRoot":""}